PUSH // wacky str/mag because it depends on the unit
ORG 0x80DF8
POIN StrText
ORG 0x80BC0
POIN MagText
POP

ALIGN 4
StrText:
String(Str)
BYTE 0x0 0x0

ALIGN 4
MagText:
String(Mag)
BYTE 0x0 0x0

// these pointers are to pointers to text... thanks IS
#define StatText(id, string) "PUSH; ORG 0x41CBB8 + (id * 16) + 0xC; POIN string; POP"

StatText(0,SkillText)
StatText(1,SpdText)
StatText(2,LuckText)
StatText(3,DefText)
StatText(4,ResText)
StatText(5,MoveText)
StatText(6,ConText)
StatText(7,AidText)
StatText(8,TrvText)
StatText(9,AffinText)
StatText(10,CondText)

ALIGN 4
SkillText:
POIN SkillTextRaw

ALIGN 4
SpdText:
POIN SpdTextRaw

ALIGN 4
LuckText:
POIN LuckTextRaw

ALIGN 4
DefText:
POIN DefTextRaw

ALIGN 4
ResText:
POIN ResTextRaw

ALIGN 4
MoveText:
POIN MoveTextRaw

ALIGN 4
ConText:
POIN ConTextRaw

ALIGN 4
AidText:
POIN AidTextRaw

ALIGN 4
TrvText:
POIN TrvTextRaw

ALIGN 4
AffinText:
POIN AffinTextRaw

ALIGN 4
CondText:
POIN CondTextRaw

ALIGN 4
SkillTextRaw:
String(Skill)
BYTE 0x0 0x0

ALIGN 4
SpdTextRaw:
String(Spd)
BYTE 0x0 0x0

ALIGN 4
LuckTextRaw:
String(Luck)
BYTE 0x0 0x0

ALIGN 4
DefTextRaw:
String(Def)
BYTE 0x0 0x0

ALIGN 4
ResTextRaw:
String(Res)
BYTE 0x0 0x0

ALIGN 4
MoveTextRaw:
String(Move)
BYTE 0x0 0x0

ALIGN 4
ConTextRaw:
String(Con)
BYTE 0x0 0x0

ALIGN 4
AidTextRaw:
String(Aid)
BYTE 0x0 0x0

ALIGN 4
TrvTextRaw:
String(Trv)
BYTE 0x0 0x0

ALIGN 4
AffinTextRaw:
String(Affin)
BYTE 0x0 0x0

ALIGN 4
CondTextRaw:
String(Cond)
BYTE 0x0 0x0

#define ItemStatText(id, string) "PUSH; ORG 0x41CC78 + (id * 16) + 0xC; POIN string; POP"

ItemStatText(0,AtkText)
ItemStatText(1,HitText)
ItemStatText(2,RngText)
ItemStatText(3,CritText)
ItemStatText(4,AvoText)

ALIGN 4
AtkText:
POIN AtkTextRaw

ALIGN 4
HitText:
POIN HitTextRaw

ALIGN 4
RngText:
POIN RngTextRaw

ALIGN 4
CritText:
POIN CritTextRaw

ALIGN 4
AvoText:
POIN AvoTextRaw

ALIGN 4
AtkTextRaw:
String(Atk)
BYTE 0x0 0x0

ALIGN 4
HitTextRaw:
String(Hit)
BYTE 0x0 0x0

ALIGN 4
RngTextRaw:
String(Rng)
BYTE 0x0 0x0

ALIGN 4
CritTextRaw:
String(Crit)
BYTE 0x0 0x0

ALIGN 4
AvoTextRaw:
String(Avo)
BYTE 0x0 0x0

PUSH // battle preview

ORG 0x1C988C
String(AS)
BYTE 0x0 0x0

ORG 0x1C9894
String(Def)
BYTE 0x0 0x0

ORG 0x1C989C
String(Atk)
BYTE 0x0 0x0

ORG 0x1C98A4
String(Crit)
BYTE 0x0 0x0

ORG 0x1C98AC
String(Hit)
BYTE 0x0 0x0

ORG 0x1C98B4
String(Atk)
BYTE 0x0 0x0

POP

PUSH // item preview

ORG 0x1C9350
String(Aff)
BYTE 0x0 0x0

ORG 0x1C9358
String(Atk)
BYTE 0x0 0x0

ORG 0x1C9360
String(Hit)
BYTE 0x0 0x0

ORG 0x1C9368
String(Crit)
BYTE 0x0 0x0

ORG 0x1C9370
String(Avo)
BYTE 0x0 0x0

POP

PUSH // item r text

ORG 0x41D06C
String(Rng)
BYTE 0x0 0x0

ORG 0x41D074
String(Wt)
BYTE 0x0 0x0

ORG 0x41D07C
String(Mt)
BYTE 0x0 0x0

ORG 0x41D084
String(Hit)
BYTE 0x0 0x0

ORG 0x41D08C
String(Crit)
BYTE 0x0 0x0

ORG 0x41D094
String(Staff)
BYTE 0x0 0x0

POP

PUSH // Weapon types

ORG 0x1C91A4
POIN SwordText
POIN LanceText
POIN AxeText
POIN BowText
POIN StaffText
POIN AnimaText
POIN LightText
POIN DarkText

POP

ALIGN 4
SwordText:
String(Sword)
BYTE 0x0 0x0

ALIGN 4
LanceText:
String(Lance)
BYTE 0x0 0x0

ALIGN 4
AxeText:
String(Axe)
BYTE 0x0 0x0

ALIGN 4
BowText:
String(Bow)
BYTE 0x0 0x0

ALIGN 4
AnimaText:
String(Anima)
BYTE 0x0 0x0

ALIGN 4
LightText:
String(Light)
BYTE 0x0 0x0

ALIGN 4
DarkText:
String(Dark)
BYTE 0x0 0x0

PUSH // Level up screen 2EB864

//ORG 0x69544
//POIN LevelUpText

ORG 0x2EB864
String(HP)
BYTE 0x0

ORG 0x2EB869
String(Str)
BYTE 0x0

ORG 0x2EB86E
String(Skl)
BYTE 0x0

ORG 0x2EB873
String(Spd)
BYTE 0x0

ORG 0x2EB878
String(Luck)
BYTE 0x0

ORG 0x2EB87D
String(Def)
BYTE 0x0

ORG 0x2EB882
String(Res)
BYTE 0x0

ORG 0x2EB887
String(Con)
BYTE 0x0

// Magic
ORG 0x2EB88C
String(HP)
BYTE 0x0

ORG 0x2EB891
String(Mag)
BYTE 0x0

ORG 0x2EB896
String(Skl)
BYTE 0x0

ORG 0x2EB89B
String(Spd)
BYTE 0x0

ORG 0x2EB8A0
String(Luck)
BYTE 0x0

ORG 0x2EB8A5
String(Def)
BYTE 0x0

ORG 0x2EB8AA
String(Res)
BYTE 0x0

ORG 0x2EB8AF
String(Con)
BYTE 0x0

POP
